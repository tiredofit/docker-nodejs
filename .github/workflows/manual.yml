# Manual Workflow tiredofit/docker-nodejs
name: manual

on:
  workflow_dispatch:
    inputs:
      Manual Build:
        description: 'Manual Build'
        required: false

jobs:
  v18_debian_bullseye:
    env:
      RELEASE: "18"
      DISTRIB: bullseye
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          set -x
          if [[ $GITHUB_REF == refs/heads/* ]]; then
             if [[ $GITHUB_REF == refs/heads/*/* ]] ; then
               BRANCH="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
             else
               BRANCH=${GITHUB_REF#refs/heads/}
             fi

            case ${BRANCH} in
              "debian" )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-debian,${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB},${DOCKER_IMAGE}:${RELEASE}-debian-latest,${DOCKER_IMAGE}:debian"
                ;;
              * )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-debian,${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB},${DOCKER_IMAGE}:${RELEASE}-debian-latest,${DOCKER_IMAGE}:debian"
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
               GITTAG="${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB}-$(echo $GITHUB_REF | sed 's|refs/tags/||g')"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile.debian" ] ; then
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_commit=\"${GITHUB_SHA}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile.debian
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile.debian
              mkdir -p install/assets/.changelogs ; cp CHANGELOG.md install/assets/.changelogs/${GITHUB_REPOSITORY/\//_}.md
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile.debian
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile.debian
            fi
          fi

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.debian
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
             NODE_VERSION=${{ env.RELEASE }}
             DEBIAN_VERSION=${{ env.DISTRIB }}

  v16_debian_bullseye:
    env:
      RELEASE: "16"
      DISTRIB: bullseye
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          set -x
          if [[ $GITHUB_REF == refs/heads/* ]]; then
             if [[ $GITHUB_REF == refs/heads/*/* ]] ; then
               BRANCH="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
             else
               BRANCH=${GITHUB_REF#refs/heads/}
             fi

            case ${BRANCH} in
              "debian" )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-debian,${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB},${DOCKER_IMAGE}:${RELEASE}-debian-latest,${DOCKER_IMAGE}:debian"
                ;;
              * )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-debian,${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB},${DOCKER_IMAGE}:${RELEASE}-debian-latest,${DOCKER_IMAGE}:debian"
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
               GITTAG="${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB}-$(echo $GITHUB_REF | sed 's|refs/tags/||g')"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile.debian" ] ; then
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_commit=\"${GITHUB_SHA}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile.debian
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile.debian
              mkdir -p install/assets/.changelogs ; cp CHANGELOG.md install/assets/.changelogs/${GITHUB_REPOSITORY/\//_}.md
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile.debian
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile.debian
            fi
          fi

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.debian
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
             NODE_VERSION=${{ env.RELEASE }}
             DEBIAN_VERSION=${{ env.DISTRIB }}

  v14_debian_bullseye:
    env:
      RELEASE: "14"
      DISTRIB: bullseye
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          set -x
          if [[ $GITHUB_REF == refs/heads/* ]]; then
             if [[ $GITHUB_REF == refs/heads/*/* ]] ; then
               BRANCH="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
             else
               BRANCH=${GITHUB_REF#refs/heads/}
             fi

            case ${BRANCH} in
              "debian" )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-debian,${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB},${DOCKER_IMAGE}:${RELEASE}-debian-latest,${DOCKER_IMAGE}:debian"
                ;;
              * )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-debian,${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB},${DOCKER_IMAGE}:${RELEASE}-debian-latest,${DOCKER_IMAGE}:debian"
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
               GITTAG="${DOCKER_IMAGE}:${RELEASE}-debian-${DISTRIB}-$(echo $GITHUB_REF | sed 's|refs/tags/||g')"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile.debian" ] ; then
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_commit=\"${GITHUB_SHA}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile.debian
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile.debian
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile.debian
              mkdir -p install/assets/.changelogs ; cp CHANGELOG.md install/assets/.changelogs/${GITHUB_REPOSITORY/\//_}.md
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile.debian
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile.debian
            fi
          fi

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.debian
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
             NODE_VERSION=${{ env.RELEASE }}
             DEBIAN_VERSION=${{ env.DISTRIB }}

  v18_alpine:
    env:
      RELEASE: "16"
      DISTRIB: "3.16"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          git clone "https://github.com/nodejs/node"  ; cd node
          NODE_VERSION=$(git tag | grep v${RELEASE} | sort -V | tail -1)
          cd ..
          rm -rf node
          sed -i "s|ENV NODE_VERSION=.*|ENV NODE_VERSION=${NODE_VERSION}|g" Dockerfile.alpine

          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
             if [[ $GITHUB_REF == refs/heads/*/* ]] ; then
               BRANCH="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
             else
               BRANCH=${GITHUB_REF#refs/heads/}
             fi


            case ${BRANCH} in
              * )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-alpine,${DOCKER_IMAGE}:${RELEASE}-alpine-$(echo ${NODE_VERSION} | sed 's|v||g'),${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
               GITTAG="${DOCKER_IMAGE}:${RELEASE}-alpine-${DISTRIB}-$(echo $GITHUB_REF | sed 's|refs/tags/||g')"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile.alpine" ] ; then
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_commit=\"${GITHUB_SHA}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile.alpine
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile.alpine
              mkdir -p install/assets/.changelogs ; cp CHANGELOG.md install/assets/.changelogs/${GITHUB_REPOSITORY/\//_}.md
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile.alpine
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile.alpine
            fi
          fi

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
             ALPINE_VERSION=${{ env.DISTRIB }}

  v16_alpine:
    env:
      RELEASE: "16"
      DISTRIB: "3.16"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          git clone "https://github.com/nodejs/node"  ; cd node
          NODE_VERSION=$(git tag | grep v${RELEASE} | sort -V | tail -1)
          cd ..
          rm -rf node
          sed -i "s|ENV NODE_VERSION=.*|ENV NODE_VERSION=${NODE_VERSION}|g" Dockerfile.alpine

          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          if [[ $GITHUB_REF == refs/heads/* ]]; then
             if [[ $GITHUB_REF == refs/heads/*/* ]] ; then
               BRANCH="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
             else
               BRANCH=${GITHUB_REF#refs/heads/}
             fi


            case ${BRANCH} in
              * )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-alpine,${DOCKER_IMAGE}:${RELEASE}-alpine-$(echo ${NODE_VERSION} | sed 's|v||g'),${DOCKER_IMAGE}:${RELEASE}-latest,${DOCKER_IMAGE}:latest"
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
               GITTAG="${DOCKER_IMAGE}:${RELEASE}-alpine-${DISTRIB}-$(echo $GITHUB_REF | sed 's|refs/tags/||g')"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile.alpine" ] ; then
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_commit=\"${GITHUB_SHA}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile.alpine
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile.alpine
              mkdir -p install/assets/.changelogs ; cp CHANGELOG.md install/assets/.changelogs/${GITHUB_REPOSITORY/\//_}.md
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile.alpine
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile.alpine
            fi
          fi

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
             ALPINE_VERSION=${{ env.DISTRIB }}

  v14_alpine:
    env:
      RELEASE: "14"
      DISTRIB: "3.16"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          git clone "https://github.com/nodejs/node"  ; cd node
          NODE_VERSION=$(git tag | grep v${RELEASE} | sort -V | tail -1)
          cd ..
          rm -rf node
          sed -i "s|ENV NODE_VERSION=.*|ENV NODE_VERSION=${NODE_VERSION}|g" Dockerfile.alpine

          DOCKER_IMAGE=${GITHUB_REPOSITORY/docker-/}
          set -x
          if [[ $GITHUB_REF == refs/heads/* ]]; then
             if [[ $GITHUB_REF == refs/heads/*/* ]] ; then
               BRANCH="${DOCKER_IMAGE}:$(echo $GITHUB_REF | sed "s|refs/heads/||g" | sed "s|/|-|g")"
             else
               BRANCH=${GITHUB_REF#refs/heads/}
             fi

            case ${BRANCH} in
              * )
                  BRANCHTAG="${DOCKER_IMAGE}:${RELEASE}-alpine,${DOCKER_IMAGE}:${RELEASE}-alpine-$(echo ${NODE_VERSION} | sed 's|v||g'),${DOCKER_IMAGE}:${RELEASE}-latest"
                ;;
            esac
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
               GITTAG="${DOCKER_IMAGE}:${RELEASE}-alpine-${DISTRIB}-$(echo $GITHUB_REF | sed 's|refs/tags/||g')"
          fi

          if [ -n "${BRANCHTAG}" ] && [ -n "${GITTAG}" ]; then
            TAGS=${BRANCHTAG},${GITTAG}
          else
            TAGS="${BRANCHTAG}${GITTAG}"
          fi

          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Label
        id: Label
        run: |
          if [ -f "Dockerfile.alpine" ] ; then
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_repository=\"https://github.com/${GITHUB_REPOSITORY}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_commit=\"${GITHUB_SHA}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_committed_by=\"${GITHUB_ACTOR}\"" Dockerfile.alpine
            sed -i "/FROM .*/a LABEL tiredofit.nodejs.image_build_date=\"$(date +'%Y-%m-%d %H:%M:%S')\"" Dockerfile.alpine
            if [ -f "CHANGELOG.md" ] ; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_changelog_version=\"$(head -n1 ./CHANGELOG.md | awk '{print $2}')\"" Dockerfile.alpine
              mkdir -p install/assets/.changelogs ; cp CHANGELOG.md install/assets/.changelogs/${GITHUB_REPOSITORY/\//_}.md
            fi

            if [[ $GITHUB_REF == refs/tags/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_tag=\"${GITHUB_REF#refs/tags/v}\"" Dockerfile.alpine
            fi

            if [[ $GITHUB_REF == refs/heads/* ]]; then
              sed -i "/FROM .*/a LABEL tiredofit.nodejs.git_branch=\"${GITHUB_REF#refs/heads/}\"" Dockerfile.alpine
            fi
          fi

      - name: Build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ./Dockerfile.alpine
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
             ALPINE_VERSION=${{ env.DISTRIB }}

